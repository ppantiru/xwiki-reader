<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>ReaderCode</web>
  <name>OPMLImportSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent/>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1290871963000</creationDate>
  <date>1291140937000</date>
  <contentUpdateDate>1291140937000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>ReaderCode.OPMLImportSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>94e7f08a-440e-4945-9f92-0611179ffb12</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("xwiki:dom:loaded", function(){

  /**
   * Extend input elements with check and uncheck methods to be able to check/uncheck
   * a large collection of checkboxes at once using Enumerable#invoke
   */
  Element.addMethods('input', {
    uncheck:function(elem){
      elem = $(elem);
      elem.checked = false;
    return elem;
    },
    check:function(elem){
      elem = $(elem);
      if (!elem.up('.alreadyExists')) {
        elem.checked = true;
      }
      return elem;
    }
  });

  var translations = {
    "selectAll" : "$msg.get('reader.opmlImport.selectAll')",
    "unselectAll" : "$msg.get('reader.opmlImport.unselectAll')"
  }
  var form = $('mainContentArea').down('form.selectSources')
  if (form) {
    var checkboxes = $('mainContentArea').down('form.selectSources').select("input[type='checkbox']"),
        selectAll = new Element('span',  {'class':'toggleSelection'}).update( translations['selectAll'] ),
        selectAll2 = new Element('span',  {'class':'toggleSelection'}).update( translations['selectAll'] ),
        unselectAll = new Element('span',  {'class':'toggleSelection'}).update( translations['unselectAll']),
        unselectAll2 = new Element('span',  {'class':'toggleSelection'}).update( translations['unselectAll'])
    ;
    [selectAll, selectAll2].invoke('observe','click', function() {
      checkboxes.invoke('check')
    });
    [unselectAll, unselectAll2].invoke('observe','click', function() {
      checkboxes.invoke('uncheck')
    });
    form.down('div').insert({ top: new Element('div', {'class':'toggleSelectionContainer'}).insert(selectAll).insert(unselectAll) });
    form.down('div').insert({ bottom: new Element('div', {'class':'toggleSelectionContainer'}).insert(selectAll2).insert(unselectAll2) });
  }

});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>ReaderCode.OPMLImportSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>1cbaaf24-397d-4ca3-8d1e-ffdbfc32e024</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>form.xform li.importItem input[type="text"] {
  width:315px;
}
form.xform li.importItem span.tag {
  padding-left:18px;
  margin-left:3px;
  background: url("$xwiki.getSkinFile('icons/silk/tag_yellow.gif')") no-repeat;
}

form.xform li.importItem {
  background: url("$xwiki.getSkinFile('icons/silk/bullet_feed.gif')") no-repeat 2px 5px;
}

form.xform li.alreadyExists input[type="text"] {
  color:lightGrey;
}

form.xform div.buttonwrapper {
  margin-top:15px;
  display:block;
}

div.toggleSelectionContainer {
  padding:10px
}

div.toggleSelectionContainer span.toggleSelection {
  cursor:pointer;
  text-decoration:underline;
  margin-right:10px;
}</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity}}
#set($documentToCheck = 'ReaderCode.OPMLImportCode')
#set($documentAuthor = $xwiki.getDocument($documentToCheck).contentAuthor)
#if($xwiki.hasAccessLevel('programming', $documentAuthor, $documentToCheck))
  #set($savedWithProgrammingRights = true)
#else
  #set($savedWithProgrammingRights = false)
#end
#if(!$savedWithProgrammingRights)
{{error}}
$msg.get('reader.opmlImport.requiresProgrammingRight')
{{/error}}

#if($xwiki.hasAccessLevel('programming', $context.user, $documentToCheck))
{{info}}
#set($contextDocument = $xwiki.getDocument($xcontext.getDoc()))
$msg.get('reader.opmlImport.saveWithYourProgrammingRight', [ 
  $documentToCheck,
  $xwiki.getDocument($documentToCheck).getExternalURL('save',"xredirect=$request.requestURI")
])
{{/info}}

#end
{{html clean=false}}
&lt;div class="hidden"&gt; ## This is sort of a hack not to display the groovy macro below that would fail due to the lack of
                     ## PR right. We have to hide like this since nesting script macros is forbidden by default, so we cannot
                     ## include it conditionnally. This div will be closed at the end of this page, after the include.
{{/html}}

#else
#set($ok = $xwiki.ssx.use('ReaderCode.OPMLImportSheet'))
#set($ok = $xwiki.jsx.use('ReaderCode.OPMLImportSheet'))
#set($ok = $xwiki.jsx.use('ReaderCode.FormStandardsStyle'))

{{html wiki=true}}
#if("$!{request.xaction}" == '' &amp;&amp; "$!{request.import_file}" == '')

$msg.get('reader.opmlImport.introduction')

#set($attachments = $doc.attachmentList)
#if($attachments.size() &gt; 0)
&lt;form action="" method="post" class="xform"&gt;
  &lt;div style="max-width:300px"&gt;
    &lt;input type="hidden" name="xaction" value="selectFile"&gt;
    &lt;input type="hidden" name="import_document" value="${doc.fullName}" /&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;label for="import_file"&gt;Import file&lt;/label&gt;
        &lt;span class="xHint"&gt;File to be used for the import&lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;select id="import_file" name="import_file"&gt;
        #foreach($attach in $attachments)
          &lt;option value=${attach.filename}&gt;${attach.filename}&lt;/option&gt;
        #end
        &lt;/select&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
    &lt;p&gt;
      &lt;span class="buttonwrapper"&gt;
        &lt;input class="button" type="submit" value="Next" /&gt;
      &lt;/span&gt;
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/form&gt;
#else

{{info}}$msg.get('reader.opmlImport.noAttachment'){{/info}}

#end ## attachemnts
#end ## form not submitted
{{/html}}

#end ## saved with programming right
{{/velocity}}

{{include document="ReaderCode.OPMLImportCode" context="new" /}}

{{velocity}}
#if(!$savedWithProgrammingRights)
{{html clean=false}}
&lt;/div&gt; ## Closing the div that hides the failing groovy macro
{{/html}}
#end
{{/velocity}}</content>
</xwikidoc>
