<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>ReaderCode</web>
  <name>OPMLImportCode</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>ReaderCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1291140120000</creationDate>
  <date>1291156158000</date>
  <contentUpdateDate>1291156158000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <attachment>
    <filename>opml-0.3-SNAPSHOT.jar</filename>
    <filesize>25007</filesize>
    <author>XWiki.Admin</author>
    <date>1291142513000</date>
    <version>1.2</version>
    <comment/>
    <content>UEsDBAoAAAAAAEuMez0AAAAAAAAAAAAAAAAJAAAATUVUQS1JTkYvUEsDBAoAAAAIAEqMez1Pa6cy
awAAAIEAAAAUAAAATUVUQS1JTkYvTUFOSUZFU1QuTUbzTczLTEstLtENSy0qzszPs1Iw1DPg5XIs
Ss7ILEstQggH5KRWlBYrwCR4uZyLUhNLUlN0nSqtFBwLEpMzUhV8E8tS83i5nEozc0rA4lllqTn5
yZklIPUg0RRdr5RskBVmegbxhua8XLxcAFBLAwQKAAAAAABLjHs9AAAAAAAAAAAAAAAABAAAAGNv
bS9QSwMECgAAAAAAS4x7PQAAAAAAAAAAAAAAAAgAAABjb20vc3VuL1BLAwQKAAAAAABLjHs9AAAA
AAAAAAAAAAAAFAAAAGNvbS9zdW4vc3luZGljYXRpb24vUEsDBAoAAAAAAEuMez0AAAAAAAAAAAAA
AAAZAAAAY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL1BLAwQKAAAAAABLjHs9AAAAAAAAAAAAAAAA
HgAAAGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9vcG1sL1BLAwQKAAAAAABLjHs9AAAAAAAAAAAA
AAAAHgAAAGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9zeW5kL1BLAwQKAAAAAABLjHs9AAAAAAAA
AAAAAAAAIwAAAGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9zeW5kL2ltcGwvUEsDBAoAAAAAAEuM
ez0AAAAAAAAAAAAAAAAXAAAAY29tL3N1bi9zeW5kaWNhdGlvbi9pby9QSwMECgAAAAAAS4x7PQAA
AAAAAAAAAAAAABwAAABjb20vc3VuL3N5bmRpY2F0aW9uL2lvL2ltcGwvUEsDBAoAAAAIAEuMez2n
ip+PSQQAAJsJAAAtAAAAY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL29wbWwvQXR0cmlidXRlLmNs
YXNzjVTtV9t0FH4CtClZeOsYKE5WpNtKKQ0MN19gKNvAzZVuWmR2ODFNQxtOSDBJ5+Y/5Bc/oNOx
I+e4b+4c/yiP9yYxK6E4+uH3cnPv8zy/+9K///njT3RjBjsSPsNtEXdEfC7hLkoSmdckjKEs4l4K
9yWIfO/HF7x82UtLhZd1EV+xZUPEA75/nUKV7w8lDGKTl294eSTiWwmjbBnFlojvRKgiagISW5a6
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
AE1FVEEtSU5GL21hdmVuL3JvbWUvb3BtbC9QSwMECgAAAAgA14N7PQ+KCZzrAQAA3QQAACAAAABN
RVRBLUlORi9tYXZlbi9yb21lL29wbWwvcG9tLnhtbK1TTY/TMBS851dEuTdO2R5Q5bpwAIHUbCu6
IDitvMnb1iX+kO2kXX49ttM0SRcWkIjUqJ43GY/H7+HliVdxA9owKRbJNM2SGEQhSyZ2i+Tz3fvJ
62RJoggrLQ9Q2NjRhVkke2vVHCFOGxApVbTYQyr1Dm3WOZqlmZcJzPnJsAv7eDymx5vAe5VlU/Q1
X23dh5xOmDCWigLcV4bNTQBXsqA2uPrjZvHvGAGYNLP77D5LT6ZMSBTHmMsSqi/tmUkQwGiEedJO
y1p9LImWHDDqVr5CtWWPtLBuKRWvMBoAvu62/053LkByoBqjfumLgnIg602+ire1UlLb+FHq+NM6
f4dRqHnS+T5Ilt5MtrdvN9sP6zuMOjTyFObSUj6eb0A1cXHOMBpjnlXrivhsjAvHHyQtoUkPtKGp
AIsw8vWQCGWVc7hixhoP+GcIdljAg00n9OaZYn+EC9nUD6bQ7AFe8GFANxVYgzZtk+X9xv6HUS8y
lK7FfxEfygzlqS72rPkr6W3NOdXsB3jFZeVety6HhSP75mhlulTRVawjwLSXW4ICUbo5ZHC+jh56
uih1PXkoJR916Nn+pSlbwrhLA6frqKmfgKZvfu/qesOXHDybkWsHLeGfHLiifVLQzlD490tjg3UI
K3ID1140iX4CUEsDBAoAAAAIAEuMez2gMUEfZAAAAGQAAAAnAAAATUVUQS1JTkYvbWF2ZW4vcm9t
ZS9vcG1sL3BvbS5wcm9wZXJ0aWVzU3ZPzUstSixJTVFIqlTwTSxLzeNSDk4sUfDLL1MwMlcwNLcy
NrEyMlRwdg1RMDIwNOAqSy0qzszPszXQM9YN9nMMCPbwD+FKL8ovLfBMsS3Kz03lSiwqyUxLTC4B
8vMLcnO4AFBLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAJAAAAAAAAAAAAEADtQQAAAABNRVRB
LUlORi9QSwECFAMKAAAACABKjHs9T2unMmsAAACBAAAAFAAAAAAAAAAAAAAApIEnAAAATUVUQS1J
TkYvTUFOSUZFU1QuTUZQSwECFAMKAAAAAABLjHs9AAAAAAAAAAAAAAAABAAAAAAAAAAAABAA7UHE
AAAAY29tL1BLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAIAAAAAAAAAAAAEADtQeYAAABjb20v
c3VuL1BLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAUAAAAAAAAAAAAEADtQQwBAABjb20vc3Vu
L3N5bmRpY2F0aW9uL1BLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAZAAAAAAAAAAAAEADtQT4B
AABjb20vc3VuL3N5bmRpY2F0aW9uL2ZlZWQvUEsBAhQDCgAAAAAAS4x7PQAAAAAAAAAAAAAAAB4A
AAAAAAAAAAAQAO1BdQEAAGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9vcG1sL1BLAQIUAwoAAAAA
AEuMez0AAAAAAAAAAAAAAAAeAAAAAAAAAAAAEADtQbEBAABjb20vc3VuL3N5bmRpY2F0aW9uL2Zl
ZWQvc3luZC9QSwECFAMKAAAAAABLjHs9AAAAAAAAAAAAAAAAIwAAAAAAAAAAABAA7UHtAQAAY29t
L3N1bi9zeW5kaWNhdGlvbi9mZWVkL3N5bmQvaW1wbC9QSwECFAMKAAAAAABLjHs9AAAAAAAAAAAA
AAAAFwAAAAAAAAAAABAA7UEuAgAAY29tL3N1bi9zeW5kaWNhdGlvbi9pby9QSwECFAMKAAAAAABL
jHs9AAAAAAAAAAAAAAAAHAAAAAAAAAAAABAA7UFjAgAAY29tL3N1bi9zeW5kaWNhdGlvbi9pby9p
bXBsL1BLAQIUAwoAAAAIAEuMez2nip+PSQQAAJsJAAAtAAAAAAAAAAAAAACkgZ0CAABjb20vc3Vu
L3N5bmRpY2F0aW9uL2ZlZWQvb3BtbC9BdHRyaWJ1dGUuY2xhc3NQSwECFAMKAAAACABLjHs9zlNF
CasEAAApDgAAKAAAAAAAAAAAAAAApIExBwAAY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL29wbWwv
T3BtbC5jbGFzc1BLAQIUAwoAAAAIAEuMez2vPU5N/wkAAKwXAAArAAAAAAAAAAAAAACkgSIMAABj
b20vc3VuL3N5bmRpY2F0aW9uL2ZlZWQvb3BtbC9PdXRsaW5lLmNsYXNzUEsBAhQDCgAAAAgAS4x7
PcyqhON8AQAAwgIAAEkAAAAAAAAAAAAAAKSBahYAAGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9z
eW5kL2ltcGwvQ29udmVydGVyRm9yT1BNTDEwJE91dGxpbmVIb2xkZXIuY2xhc3NQSwECFAMKAAAA
CABLjHs9UPezUBYBAADgAQAARwAAAAAAAAAAAAAApIFNGAAAY29tL3N1bi9zeW5kaWNhdGlvbi9m
ZWVkL3N5bmQvaW1wbC9Db252ZXJ0ZXJGb3JPUE1MMTAkVHJlZUNvbnRleHQuY2xhc3NQSwECFAMK
AAAACABLjHs9XWRtVSMTAAC+KAAAOwAAAAAAAAAAAAAApIHIGQAAY29tL3N1bi9zeW5kaWNhdGlv
bi9mZWVkL3N5bmQvaW1wbC9Db252ZXJ0ZXJGb3JPUE1MMTAuY2xhc3NQSwECFAMKAAAACABLjHs9
cVUTbcsBAADeAwAAOwAAAAAAAAAAAAAApIFELQAAY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL3N5
bmQvaW1wbC9Db252ZXJ0ZXJGb3JPUE1MMjAuY2xhc3NQSwECFAMKAAAACABLjHs98XZZgZcBAADn
AgAAOQAAAAAAAAAAAAAApIFoLwAAY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL3N5bmQvaW1wbC9U
cmVlQ2F0ZWdvcnlJbXBsLmNsYXNzUEsBAhQDCgAAAAgAS4x7PfLFHULsCQAAPBQAADEAAAAAAAAA
AAAAAKSBVjEAAGNvbS9zdW4vc3luZGljYXRpb24vaW8vaW1wbC9PUE1MMTBHZW5lcmF0b3IuY2xh
c3NQSwECFAMKAAAACABLjHs9D8qEABEOAADKHAAALgAAAAAAAAAAAAAApIGROwAAY29tL3N1bi9z
eW5kaWNhdGlvbi9pby9pbXBsL09QTUwxMFBhcnNlci5jbGFzc1BLAQIUAwoAAAAIAEuMez1RDprs
bQMAAKsHAAAxAAAAAAAAAAAAAACkge5JAABjb20vc3VuL3N5bmRpY2F0aW9uL2lvL2ltcGwvT1BN
TDIwR2VuZXJhdG9yLmNsYXNzUEsBAhQDCgAAAAgAS4x7PfUIFD4cBQAAOAoAAC4AAAAAAAAAAAAA
AKSBqk0AAGNvbS9zdW4vc3luZGljYXRpb24vaW8vaW1wbC9PUE1MMjBQYXJzZXIuY2xhc3NQSwEC
FAMKAAAACABKjHs9iYQoJMUBAADbAwAADwAAAAAAAAAAAAAApIESUwAAcm9tZS5wcm9wZXJ0aWVz
UEsBAhQDCgAAAAAAS4x7PQAAAAAAAAAAAAAAAA8AAAAAAAAAAAAQAO1BBFUAAE1FVEEtSU5GL21h
dmVuL1BLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAUAAAAAAAAAAAAEADtQTFVAABNRVRBLUlO
Ri9tYXZlbi9yb21lL1BLAQIUAwoAAAAAAEuMez0AAAAAAAAAAAAAAAAZAAAAAAAAAAAAEADtQWNV
AABNRVRBLUlORi9tYXZlbi9yb21lL29wbWwvUEsBAhQDCgAAAAgA14N7PQ+KCZzrAQAA3QQAACAA
AAAAAAAAAAAAAKSBmlUAAE1FVEEtSU5GL21hdmVuL3JvbWUvb3BtbC9wb20ueG1sUEsBAhQDCgAA
AAgAS4x7PaAxQR9kAAAAZAAAACcAAAAAAAAAAAAAAKSBw1cAAE1FVEEtSU5GL21hdmVuL3JvbWUv
b3BtbC9wb20ucHJvcGVydGllc1BLBQYAAAAAHQAdAC0JAABsWAAAAAA=
</content>
  </attachment>
  <content>{{groovy jars="attach:ReaderCode.OPMLImportCode@opml-0.3-SNAPSHOT.jar"}}
import com.sun.syndication.io.WireFeedInput;
import com.sun.syndication.feed.opml.Opml;
import com.sun.syndication.feed.opml.Outline;
import com.sun.syndication.io.impl.OPML10Parser;
import com.sun.syndication.io.impl.FeedParsers;
import java.io.InputStreamReader;
import java.io.ByteArrayInputStream;
import java.io.StringReader;
import java.net.URL

/* Mainly targeting google reader subscription TBH. 
   Would need to check if other readers export using the same strategy
   of nesting subscriptions with categories / tags in an outline.  */

def currentTag = ''
def existingSourceUrls = []
def attachmentDocument = xwiki.getDocument(request.import_document)
def readerSpace = attachmentDocument.space

def escapeLtGt = {
  return it.replaceAll('&lt;', '&amp;lt;').replaceAll('&gt;', '&amp;gt;')
}

def outputOutline = { outline, isChild -&gt;
  if (!outline.xmlUrl || outline.xmlUrl == '') {
    currentTag = outline.text
  } else if (!isChild) {
    currentTag = ''
  }
  def feedTitle = outline.title ?: outline.text
  if (outline.xmlUrl != '' &amp;&amp; outline.xmlUrl &amp;&amp; feedTitle) {
    def wouldBeDoc = xwiki.getDocument("${readerSpace}.${xwiki.getUniquePageName(readerSpace, feedTitle)}")
    if(!existingSourceUrls.contains(outline.xmlUrl.trim())) {
      println """
      &lt;li class="xitem importItem"&gt;
        &lt;div class="xitemcontainer"&gt;
          &lt;input type="checkbox" name="selected" value="${wouldBeDoc.name}" checked="checked" /&gt;
          &lt;input type="text" name="url_${wouldBeDoc.name}" value="${outline.xmlUrl}" /&gt;
          &lt;input type="text" name="title_${wouldBeDoc.name}" value="${escapeLtGt(feedTitle)}" /&gt;
      """
      if (currentTag != '') {
         // TODO display tag edit UI when aggregators support tags in the reader.
         // println """&lt;span class="tag"&gt;${currentTag}&lt;/span&gt;"""
      }
      println """
        &lt;/div&gt;
      &lt;/li&gt;
      """
    } else {
      println"""
      &lt;li class="xitem importItem alreadyExists"&gt;
        &lt;div class="xitemcontainer"&gt;
          &lt;div&gt;
            &lt;span class="warningmessage box"&gt;${msg.get('reader.opmlImport.sourceAlreadyExists')}&lt;/span&gt;
          &lt;/div&gt;
          &lt;div&gt;
            &lt;input type="checkbox" name="selected" value="${wouldBeDoc.name}" disabled="disabled" /&gt;
            &lt;input type="text" name="url_${wouldBeDoc.name}" value="${outline.xmlUrl}" disabled="disabled" /&gt;
            &lt;input type="text" name="title_${wouldBeDoc.name}" value="${escapeLtGt(feedTitle)}" disabled="disabled" /&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      """
    }
  } else if (outline.xmlUrl != '' &amp;&amp; outline.xmlUrl ) {

println """ &lt;li class='xitem&gt;&lt;span class="box warningmessage"&gt;${msg.get('reader.opmlImport.ignoredFeedWithoutTitle', [ outline.xmlUrl ])}&lt;/span&gt;&lt;/li&gt;"""

  }
}

if (request.xaction &amp;&amp; request.xaction == 'importOpml') {

  if (request.getParameterValues('selected').size() &gt; 0) {

    println """**${msg.get('reader.opmlImport.listOfImportedSources')}**"""

    request.getParameterValues('selected').each {
      def title = request.getParameter("title_${it}")
      def url = request.getParameter("url_${it}")
      def document = xwiki.getDocument("${readerSpace}.${xwiki.getUniquePageName(readerSpace, title)}")
      def source = document.getObject('XWiki.AggregatorURLClass', true)
      // Title, parent, content 
      document.setTitle(title)
      document.setParent("${readerSpace}.Sources")
      document.setSyntaxId('xwiki/2.1')
      document.setContent("{{include document='ReaderCode.FeedSheet' /}}")
      source.set('title', title)
      // Duplicate name in source object
      source.set('name', document.name)
      source.set('url', url)
      document.save(msg.get('reader.versionSummary.sourceCreatedFromOpml'))
      println """* [[{{{${title}}}}&gt;&gt;${document.fullName}]]"""
    }
  }
  else {
    println """{{warning}}${msg.get('reader.opmlImport.nothingToImport')}{{/warning}}"""
  }
  println ""
  println """[[${msg.get('reader.opmlImport.backToTheImportWizard')}&gt;&gt;${attachmentDocument.fullName}]]"""

}
else if (request.import_file &amp;&amp; request.import_file != '' &amp;&amp; request.import_document) {

  /* ROME does not let us add parsers at run time, but whatever, WE WILL DO IT ANYWAY ! */
  FeedParsers.metaClass.getParserFor = { -&gt;
    return new OPML10Parser();
  }

  existingSourceUrls = xwiki.search("select distinct source.url from BaseObject as obj, XWiki.AggregatorURLClass as source where obj.className='XWiki.AggregatorURLClass' and obj.id=source.id")

  println """

{{html wiki=false}}"""

  try {
    WireFeedInput input = new WireFeedInput();
    Opml feed = (Opml)input.build( new StringReader(attachmentDocument.getAttachment(request.import_file).contentAsString) );
    List&lt;Outline&gt; outlines = (List&lt;Outline&gt;) feed.getOutlines();
    println """
      &lt;form action="" class="xform selectSources" method="post"&gt;
        &lt;div&gt;
          &lt;input type="hidden" name="xaction" value="importOpml" /&gt;
          &lt;input type="hidden" name="import_document" value="${request.import_document}" /&gt;
          &lt;ul class="xlist importList"&gt;
    """
    outlines.each { 
       outputOutline(it, false)
       it.children.each { child -&gt; outputOutline(child, true) } 
    }
    println """
          &lt;/ul&gt;
        &lt;/div&gt;
        &lt;div class="buttonwrapper"&gt;
          &lt;input type="submit" class="button" value="${msg.get('reader.opmlImport.doImport')}"&gt;
        &lt;/div&gt;
      &lt;/form&gt;
{{/html}}

    """
  } catch(Exception e) {
e.printStackTrace();
    println """{{/html}}

{{error}}${msg.get('reader.opmImport.failedToLoadFile', [e.message])}{{/error}}"""
  }
}

{{/groovy}}</content>
</xwikidoc>
